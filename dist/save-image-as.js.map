{"version":3,"sources":["webpack://saveImageAs/./src/saveImage.ts","webpack://saveImageAs/./src/index.ts","webpack://saveImageAs/webpack/bootstrap","webpack://saveImageAs/webpack/startup","webpack://saveImageAs/webpack/runtime/define property getters","webpack://saveImageAs/webpack/runtime/hasOwnProperty shorthand","webpack://saveImageAs/webpack/runtime/make namespace object"],"names":["EExportFormat","ERejectReason","EExportDataType","maxImageWidth","exportFormat","PNG","exportQuality","exportDataType","DATA_URL","isNaN","Error","Object","values","includes","toString","this","cleanUp","img","document","body","removeChild","imageLoaded","Promise","resolve","reject","canvas","createElement","ctx","getContext","scaleRatio","width","height","drawImage","reader","FileReader","onloadend","result","onerror","COULD_NOT_READ","onabort","ABORTED","toBlob","blob","ARRAY_BUFFER","readAsArrayBuffer","BINARY_STRING","readAsBinaryString","readAsDataURL","EMPTY_TRANSFER","imageData","data","appendChild","style","position","opacity","left","addEventListener","IMAGE_COULD_NOT_LOADED","src","convert","file","onload","readerEvent","target","FILE_HAS_NO_READIBLE_DATA","onChange","e","el","files","length","item","fileListArray","Array","fill","map","_","index","console","log","all","maxWidth","quality","exportDataAs","SaveImage","JPG","WEBP","SaveImageAs","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"mappings":"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","file":"save-image-as.js","sourcesContent":["/**\n * Available image formats\n */\nexport enum EExportFormat {\n  JPG = \"image/jpeg\",\n  PNG = \"image/png\",\n  WEBP = \"image/webp\",\n}\n/**\n * Quality of resulting image  between 0 and 1\n */\nexport type EExportQuality = number;\n\nexport enum ERejectReason {\n  COULD_NOT_READ = \"COULD_NOT_READ\",\n  ABORTED = \"ABORTED\",\n  EMPTY_TRANSFER = \"EMPTY_TRANSFER\",\n  IMAGE_COULD_NOT_LOADED = \"IMAGE_COULD_NOT_LOADED\",\n  FILE_HAS_NO_READIBLE_DATA = \"FILE_HAS_NO_READIBLE_DATA\",\n  NO_IMAGE_FILE_SELECTED = \"NO_IMAGE_FILE_SELECTED\",\n}\nexport enum EExportDataType {\n  /**\n   * readAsArrayBuffer\n   */\n  ARRAY_BUFFER,\n  /**\n   * readAsBinaryString\n   */\n  BINARY_STRING,\n  /**\n   * readAsDataURL\n   */\n  DATA_URL,\n}\nexport interface ISaveImageOptions {\n  maxImageWidth: number;\n  exportFormat: EExportFormat;\n  exportQuality: number;\n  exportDataType: EExportDataType;\n}\n\nexport type TConvertedResult = string | ArrayBuffer | null;\n\nexport class SaveImage {\n  /**\n   * Allow maximal width for the exported image. Height will be calculated using original aspect ratio to avoid distortion\n   */\n  maxImageWidth: number;\n  /** \n      Exported file format \n     */\n  exportFormat: EExportFormat;\n  /**\n   * Quality of exported image accepts value between 0-1.\n   */\n  exportQuality: EExportQuality;\n  /**\n   *\n   */\n  exportDataType: EExportDataType;\n\n  constructor({\n    maxImageWidth = 200,\n    exportFormat = EExportFormat.PNG,\n    exportQuality = 0.7,\n    exportDataType = EExportDataType.DATA_URL,\n  }: ISaveImageOptions) {\n    if (maxImageWidth < 0 || isNaN(maxImageWidth)) {\n      throw new Error(\"`maxImageWidth` should be positive number\");\n    }\n    if (!Object.values(EExportFormat).includes(exportFormat)) {\n      throw new Error(\n        `\"exportFormat\" must be one of: ${Object.values(\n          EExportFormat\n        ).toString()}`\n      );\n    }\n    if (isNaN(exportQuality) || exportQuality < 0 || exportQuality > 1) {\n      throw new Error(\"`exportQuality` must be between 0 and 1\");\n    }\n\n    this.maxImageWidth = maxImageWidth;\n    this.exportFormat = exportFormat;\n    this.exportQuality = exportQuality;\n    this.exportDataType = exportDataType;\n  }\n  private cleanUp(img: HTMLImageElement): void {\n    document.body.removeChild(img);\n  }\n\n  private imageLoaded(\n    img: HTMLImageElement\n  ): Promise<string | ArrayBuffer | null> {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const scaleRatio =\n        this.maxImageWidth < img.width ? img.width / this.maxImageWidth : 1;\n      canvas.width = img.width / scaleRatio;\n      canvas.height = img.height / scaleRatio;\n\n      ctx?.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n      const reader = new FileReader();\n\n      reader.onloadend = (): void => {\n        const { result } = reader;\n        this.cleanUp(img);\n        resolve(result);\n      };\n      reader.onerror = (): void => {\n        this.cleanUp(img);\n        reject(ERejectReason.COULD_NOT_READ);\n      };\n      reader.onabort = (): void => {\n        this.cleanUp(img);\n        reject(ERejectReason.ABORTED);\n      };\n\n      canvas.toBlob(\n        blob => {\n          if (blob !== null) {\n            switch (this.exportDataType) {\n              case EExportDataType.ARRAY_BUFFER:\n                reader.readAsArrayBuffer(blob);\n                break;\n              case EExportDataType.BINARY_STRING:\n                reader.readAsBinaryString(blob);\n                break;\n              case EExportDataType.DATA_URL:\n                reader.readAsDataURL(blob);\n                break;\n              default:\n                reader.readAsDataURL(blob);\n                break;\n            }\n          } else {\n            this.cleanUp(img);\n            reject(ERejectReason.EMPTY_TRANSFER);\n          }\n        },\n        this.exportFormat,\n        this.exportQuality\n      );\n    });\n  }\n  private imageData(\n    data: string | ArrayBuffer\n  ): Promise<string | ArrayBuffer | null> {\n    return new Promise((resolve, reject) => {\n      const img = document.createElement(\"img\");\n      document.body.appendChild(img);\n      img.style.position = \"fixed\";\n      img.style.opacity = \"0\";\n      img.style.left = this.maxImageWidth * -100 + \"px\";\n      img.addEventListener(\"load\", () => {\n        resolve(this.imageLoaded(img));\n      });\n      img.addEventListener(\"error\", () => {\n        reject(ERejectReason.IMAGE_COULD_NOT_LOADED);\n        this.cleanUp(img);\n      });\n      img.src = data.toString();\n    });\n  }\n  public convert(file: File | null): Promise<TConvertedResult> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (readerEvent: ProgressEvent<FileReader>): void => {\n        const data = readerEvent.target?.result;\n\n        if (data) {\n          resolve(this.imageData(data));\n        } else {\n          reject(ERejectReason.FILE_HAS_NO_READIBLE_DATA);\n        }\n      };\n      if (file === null) resolve(null);\n      else reader.readAsDataURL(file);\n    });\n  }\n  public onChange(e: Event): Promise<TConvertedResult | TConvertedResult[]> {\n    const el = e.target as HTMLInputElement;\n    if (!el || el.files === null) return Promise.resolve(\"\");\n\n    if (el.files.length === 1) {\n      return this.convert(el.files.item(0));\n    }\n    const fileListArray = new Array(el.files.length)\n      .fill(null)\n      .map((_, index) => {\n        console.log(index);\n        return this.convert(el?.files?.item(index) || null);\n      });\n\n    return Promise.all(fileListArray);\n\n    return Promise.resolve(\"\");\n  }\n}\n","import {\n  EExportFormat,\n  EExportQuality,\n  EExportDataType,\n  SaveImage,\n} from \"./saveImage\";\nexport const PNG = (\n  maxWidth: number,\n  quality: EExportQuality,\n  exportDataAs: EExportDataType\n): SaveImage => {\n  return new SaveImage({\n    maxImageWidth: maxWidth,\n    exportFormat: EExportFormat.PNG,\n    exportQuality: quality,\n    exportDataType: exportDataAs,\n  });\n};\nexport const JPG = (\n  maxWidth: number,\n  quality: EExportQuality,\n  exportDataAs: EExportDataType\n): SaveImage => {\n  return new SaveImage({\n    maxImageWidth: maxWidth,\n    exportFormat: EExportFormat.JPG,\n    exportQuality: quality,\n    exportDataType: exportDataAs,\n  });\n};\nexport const WEBP = (\n  maxWidth: number,\n  quality: EExportQuality,\n  exportDataAs: EExportDataType\n): SaveImage => {\n  return new SaveImage({\n    maxImageWidth: maxWidth,\n    exportFormat: EExportFormat.WEBP,\n    exportQuality: quality,\n    exportDataType: exportDataAs,\n  });\n};\n\nexport const SaveImageAs = SaveImage;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(514);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}